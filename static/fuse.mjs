/**
 * Fuse.js v7.0.0 - Lightweight fuzzy-search (http://fusejs.io)
 *
 * Copyright (c) 2023 Kiro Risk (http://kiro.me)
 * All Rights Reserved. Apache Software License 2.0
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 */
function isArray(e){return Array.isArray?Array.isArray(e):"[object Array]"===getTag(e)}let INFINITY=1/0;function baseToString(e){if("string"==typeof e)return e;let t=e+"";return"0"==t&&1/e==-INFINITY?"-0":t}function toString(e){return null==e?"":baseToString(e)}function isString(e){return"string"==typeof e}function isNumber(e){return"number"==typeof e}function isBoolean(e){return!0===e||!1===e||isObjectLike(e)&&"[object Boolean]"==getTag(e)}function isObject(e){return"object"==typeof e}function isObjectLike(e){return isObject(e)&&null!==e}function isDefined(e){return null!=e}function isBlank(e){return!e.trim().length}function getTag(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":Object.prototype.toString.call(e)}let EXTENDED_SEARCH_UNAVAILABLE="Extended search is not available",INCORRECT_INDEX_TYPE="Incorrect 'index' type",LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY=e=>`Invalid value for key ${e}`,PATTERN_LENGTH_TOO_LARGE=e=>`Pattern length exceeds max of ${e}.`,MISSING_KEY_PROPERTY=e=>`Missing ${e} property in key`,INVALID_KEY_WEIGHT_VALUE=e=>`Property 'weight' in key '${e}' must be a positive integer`,hasOwn=Object.prototype.hasOwnProperty;class KeyStore{constructor(e){this._keys=[],this._keyMap={};let t=0;e.forEach(e=>{let r=createKey(e);this._keys.push(r),this._keyMap[r.id]=r,t+=r.weight}),this._keys.forEach(e=>{e.weight/=t})}get(e){return this._keyMap[e]}keys(){return this._keys}toJSON(){return JSON.stringify(this._keys)}}function createKey(e){let t=null,r=null,i=null,s=1,n=null;if(isString(e)||isArray(e))i=e,t=createKeyPath(e),r=createKeyId(e);else{if(!hasOwn.call(e,"name"))throw Error(MISSING_KEY_PROPERTY("name"));let c=e.name;if(i=c,hasOwn.call(e,"weight")&&(s=e.weight)<=0)throw Error(INVALID_KEY_WEIGHT_VALUE(c));t=createKeyPath(c),r=createKeyId(c),n=e.getFn}return{path:t,id:r,weight:s,src:i,getFn:n}}function createKeyPath(e){return isArray(e)?e:e.split(".")}function createKeyId(e){return isArray(e)?e.join("."):e}function get(e,t){let r=[],i=!1,s=(e,t,n)=>{if(isDefined(e)){if(t[n]){let c=t[n],a=e[c];if(isDefined(a))if(n===t.length-1&&(isString(a)||isNumber(a)||isBoolean(a)))r.push(toString(a));else if(isArray(a)){i=!0;for(let o=0,h=a.length;o<h;o+=1)s(a[o],t,n+1)}else t.length&&s(a,t,n+1)}else r.push(e)}};return s(e,isString(t)?t.split("."):t,0),i?r:r[0]}let MatchOptions={includeMatches:!1,findAllMatches:!1,minMatchCharLength:1},BasicOptions={isCaseSensitive:!1,includeScore:!1,keys:[],shouldSort:!0,sortFn:(e,t)=>e.score===t.score?e.idx<t.idx?-1:1:e.score<t.score?-1:1},FuzzyOptions={location:0,threshold:.6,distance:100},AdvancedOptions={useExtendedSearch:!1,getFn:get,ignoreLocation:!1,ignoreFieldNorm:!1,fieldNormWeight:1};var Config={...BasicOptions,...MatchOptions,...FuzzyOptions,...AdvancedOptions};let SPACE=/[^ ]+/g;function norm(e=1,t=3){let r=new Map,i=Math.pow(10,t);return{get(t){let s=t.match(SPACE).length;if(r.has(s))return r.get(s);let n=parseFloat(Math.round(1/Math.pow(s,.5*e)*i)/i);return r.set(s,n),n},clear(){r.clear()}}}class FuseIndex{constructor({getFn:e=Config.getFn,fieldNormWeight:t=Config.fieldNormWeight}={}){this.norm=norm(t,3),this.getFn=e,this.isCreated=!1,this.setIndexRecords()}setSources(e=[]){this.docs=e}setIndexRecords(e=[]){this.records=e}setKeys(e=[]){this.keys=e,this._keysMap={},e.forEach((e,t)=>{this._keysMap[e.id]=t})}create(){!this.isCreated&&this.docs.length&&(this.isCreated=!0,isString(this.docs[0])?this.docs.forEach((e,t)=>{this._addString(e,t)}):this.docs.forEach((e,t)=>{this._addObject(e,t)}),this.norm.clear())}add(e){let t=this.size();isString(e)?this._addString(e,t):this._addObject(e,t)}removeAt(e){this.records.splice(e,1);for(let t=e,r=this.size();t<r;t+=1)this.records[t].i-=1}getValueForItemAtKeyId(e,t){return e[this._keysMap[t]]}size(){return this.records.length}_addString(e,t){if(!isDefined(e)||isBlank(e))return;let r={v:e,i:t,n:this.norm.get(e)};this.records.push(r)}_addObject(e,t){let r={i:t,$:{}};this.keys.forEach((t,i)=>{let s=t.getFn?t.getFn(e):this.getFn(e,t.path);if(isDefined(s)){if(isArray(s)){let n=[],c=[{nestedArrIndex:-1,value:s}];for(;c.length;){let{nestedArrIndex:a,value:o}=c.pop();if(isDefined(o)){if(isString(o)&&!isBlank(o)){let h={v:o,i:a,n:this.norm.get(o)};n.push(h)}else isArray(o)&&o.forEach((e,t)=>{c.push({nestedArrIndex:t,value:e})})}}r.$[i]=n}else if(isString(s)&&!isBlank(s)){let l={v:s,n:this.norm.get(s)};r.$[i]=l}}}),this.records.push(r)}toJSON(){return{keys:this.keys,records:this.records}}}function createIndex(e,t,{getFn:r=Config.getFn,fieldNormWeight:i=Config.fieldNormWeight}={}){let s=new FuseIndex({getFn:r,fieldNormWeight:i});return s.setKeys(e.map(createKey)),s.setSources(t),s.create(),s}function parseIndex(e,{getFn:t=Config.getFn,fieldNormWeight:r=Config.fieldNormWeight}={}){let{keys:i,records:s}=e,n=new FuseIndex({getFn:t,fieldNormWeight:r});return n.setKeys(i),n.setIndexRecords(s),n}function computeScore$1(e,{errors:t=0,currentLocation:r=0,expectedLocation:i=0,distance:s=Config.distance,ignoreLocation:n=Config.ignoreLocation}={}){let c=t/e.length;if(n)return c;let a=Math.abs(i-r);return s?c+a/s:a?1:c}function convertMaskToIndices(e=[],t=Config.minMatchCharLength){let r=[],i=-1,s=-1,n=0;for(let c=e.length;n<c;n+=1){let a=e[n];a&&-1===i?i=n:a||-1===i||((s=n-1)-i+1>=t&&r.push([i,s]),i=-1)}return e[n-1]&&n-i>=t&&r.push([i,n-1]),r}let MAX_BITS=32;function search(e,t,r,{location:i=Config.location,distance:s=Config.distance,threshold:n=Config.threshold,findAllMatches:c=Config.findAllMatches,minMatchCharLength:a=Config.minMatchCharLength,includeMatches:o=Config.includeMatches,ignoreLocation:h=Config.ignoreLocation}={}){if(t.length>32)throw Error(PATTERN_LENGTH_TOO_LARGE(32));let l=t.length,u=e.length,g=Math.max(0,Math.min(i,u)),f=n,d=g,p=a>1||o,_=p?Array(u):[],x;for(;(x=e.indexOf(t,d))>-1;)if(f=Math.min(computeScore$1(t,{currentLocation:x,expectedLocation:g,distance:s,ignoreLocation:h}),f),d=x+l,p){let y=0;for(;y<l;)_[x+y]=1,y+=1}d=-1;let m=[],E=1,S=l+u,I=1<<l-1;for(let M=0;M<l;M+=1){let $=0,C=S;for(;$<C;){let A=computeScore$1(t,{errors:M,currentLocation:g+C,expectedLocation:g,distance:s,ignoreLocation:h});A<=f?$=C:S=C,C=Math.floor((S-$)/2+$)}S=C;let L=Math.max(1,g-C+1),O=c?u:Math.min(g+C,u)+l,k=Array(O+2);k[O+1]=(1<<M)-1;for(let v=O;v>=L;v-=1){let R=v-1,N=r[e.charAt(R)];if(p&&(_[R]=+!!N),k[v]=(k[v+1]<<1|1)&N,M&&(k[v]|=(m[v+1]|m[v])<<1|1|m[v+1]),k[v]&I&&(E=computeScore$1(t,{errors:M,currentLocation:R,expectedLocation:g,distance:s,ignoreLocation:h}))<=f){if(f=E,(d=R)<=g)break;L=Math.max(1,2*g-d)}}let T=computeScore$1(t,{errors:M+1,currentLocation:g,expectedLocation:g,distance:s,ignoreLocation:h});if(T>f)break;m=k}let F={isMatch:d>=0,score:Math.max(.001,E)};if(p){let b=convertMaskToIndices(_,a);b.length?o&&(F.indices=b):F.isMatch=!1}return F}function createPatternAlphabet(e){let t={};for(let r=0,i=e.length;r<i;r+=1){let s=e.charAt(r);t[s]=(t[s]||0)|1<<i-r-1}return t}class BitapSearch{constructor(e,{location:t=Config.location,threshold:r=Config.threshold,distance:i=Config.distance,includeMatches:s=Config.includeMatches,findAllMatches:n=Config.findAllMatches,minMatchCharLength:c=Config.minMatchCharLength,isCaseSensitive:a=Config.isCaseSensitive,ignoreLocation:o=Config.ignoreLocation}={}){if(this.options={location:t,threshold:r,distance:i,includeMatches:s,findAllMatches:n,minMatchCharLength:c,isCaseSensitive:a,ignoreLocation:o},this.pattern=a?e:e.toLowerCase(),this.chunks=[],!this.pattern.length)return;let h=(e,t)=>{this.chunks.push({pattern:e,alphabet:createPatternAlphabet(e),startIndex:t})},l=this.pattern.length;if(l>32){let u=0,g=l%32,f=l-g;for(;u<f;)h(this.pattern.substr(u,32),u),u+=32;if(g){let d=l-32;h(this.pattern.substr(d),d)}}else h(this.pattern,0)}searchIn(e){let{isCaseSensitive:t,includeMatches:r}=this.options;if(t||(e=e.toLowerCase()),this.pattern===e){let i={isMatch:!0,score:0};return r&&(i.indices=[[0,e.length-1]]),i}let{location:s,distance:n,threshold:c,findAllMatches:a,minMatchCharLength:o,ignoreLocation:h}=this.options,l=[],u=0,g=!1;this.chunks.forEach(({pattern:t,alphabet:i,startIndex:f})=>{let{isMatch:d,score:p,indices:_}=search(e,t,i,{location:s+f,distance:n,threshold:c,findAllMatches:a,minMatchCharLength:o,includeMatches:r,ignoreLocation:h});d&&(g=!0),u+=p,d&&_&&(l=[...l,..._])});let f={isMatch:g,score:g?u/this.chunks.length:1};return g&&r&&(f.indices=l),f}}class BaseMatch{constructor(e){this.pattern=e}static isMultiMatch(e){return getMatch(e,this.multiRegex)}static isSingleMatch(e){return getMatch(e,this.singleRegex)}search(){}}function getMatch(e,t){let r=e.match(t);return r?r[1]:null}class ExactMatch extends BaseMatch{constructor(e){super(e)}static get type(){return"exact"}static get multiRegex(){return/^="(.*)"$/}static get singleRegex(){return/^=(.*)$/}search(e){let t=e===this.pattern;return{isMatch:t,score:t?0:1,indices:[0,this.pattern.length-1]}}}class InverseExactMatch extends BaseMatch{constructor(e){super(e)}static get type(){return"inverse-exact"}static get multiRegex(){return/^!"(.*)"$/}static get singleRegex(){return/^!(.*)$/}search(e){let t=e.indexOf(this.pattern),r=-1===t;return{isMatch:r,score:r?0:1,indices:[0,e.length-1]}}}class PrefixExactMatch extends BaseMatch{constructor(e){super(e)}static get type(){return"prefix-exact"}static get multiRegex(){return/^\^"(.*)"$/}static get singleRegex(){return/^\^(.*)$/}search(e){let t=e.startsWith(this.pattern);return{isMatch:t,score:t?0:1,indices:[0,this.pattern.length-1]}}}class InversePrefixExactMatch extends BaseMatch{constructor(e){super(e)}static get type(){return"inverse-prefix-exact"}static get multiRegex(){return/^!\^"(.*)"$/}static get singleRegex(){return/^!\^(.*)$/}search(e){let t=!e.startsWith(this.pattern);return{isMatch:t,score:t?0:1,indices:[0,e.length-1]}}}class SuffixExactMatch extends BaseMatch{constructor(e){super(e)}static get type(){return"suffix-exact"}static get multiRegex(){return/^"(.*)"\$$/}static get singleRegex(){return/^(.*)\$$/}search(e){let t=e.endsWith(this.pattern);return{isMatch:t,score:t?0:1,indices:[e.length-this.pattern.length,e.length-1]}}}class InverseSuffixExactMatch extends BaseMatch{constructor(e){super(e)}static get type(){return"inverse-suffix-exact"}static get multiRegex(){return/^!"(.*)"\$$/}static get singleRegex(){return/^!(.*)\$$/}search(e){let t=!e.endsWith(this.pattern);return{isMatch:t,score:t?0:1,indices:[0,e.length-1]}}}class FuzzyMatch extends BaseMatch{constructor(e,{location:t=Config.location,threshold:r=Config.threshold,distance:i=Config.distance,includeMatches:s=Config.includeMatches,findAllMatches:n=Config.findAllMatches,minMatchCharLength:c=Config.minMatchCharLength,isCaseSensitive:a=Config.isCaseSensitive,ignoreLocation:o=Config.ignoreLocation}={}){super(e),this._bitapSearch=new BitapSearch(e,{location:t,threshold:r,distance:i,includeMatches:s,findAllMatches:n,minMatchCharLength:c,isCaseSensitive:a,ignoreLocation:o})}static get type(){return"fuzzy"}static get multiRegex(){return/^"(.*)"$/}static get singleRegex(){return/^(.*)$/}search(e){return this._bitapSearch.searchIn(e)}}class IncludeMatch extends BaseMatch{constructor(e){super(e)}static get type(){return"include"}static get multiRegex(){return/^'"(.*)"$/}static get singleRegex(){return/^'(.*)$/}search(e){let t=0,r,i=[],s=this.pattern.length;for(;(r=e.indexOf(this.pattern,t))>-1;)t=r+s,i.push([r,t-1]);let n=!!i.length;return{isMatch:n,score:n?0:1,indices:i}}}let searchers=[ExactMatch,IncludeMatch,PrefixExactMatch,InversePrefixExactMatch,InverseSuffixExactMatch,SuffixExactMatch,InverseExactMatch,FuzzyMatch],searchersLen=searchers.length,SPACE_RE=/ +(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/,OR_TOKEN="|";function parseQuery(e,t={}){return e.split("|").map(e=>{let r=e.trim().split(SPACE_RE).filter(e=>e&&!!e.trim()),i=[];for(let s=0,n=r.length;s<n;s+=1){let c=r[s],a=!1,o=-1;for(;!a&&++o<searchersLen;){let h=searchers[o],l=h.isMultiMatch(c);l&&(i.push(new h(l,t)),a=!0)}if(!a)for(o=-1;++o<searchersLen;){let u=searchers[o],g=u.isSingleMatch(c);if(g){i.push(new u(g,t));break}}}return i})}let MultiMatchSet=new Set([FuzzyMatch.type,IncludeMatch.type]);class ExtendedSearch{constructor(e,{isCaseSensitive:t=Config.isCaseSensitive,includeMatches:r=Config.includeMatches,minMatchCharLength:i=Config.minMatchCharLength,ignoreLocation:s=Config.ignoreLocation,findAllMatches:n=Config.findAllMatches,location:c=Config.location,threshold:a=Config.threshold,distance:o=Config.distance}={}){this.query=null,this.options={isCaseSensitive:t,includeMatches:r,minMatchCharLength:i,findAllMatches:n,ignoreLocation:s,location:c,threshold:a,distance:o},this.pattern=t?e:e.toLowerCase(),this.query=parseQuery(this.pattern,this.options)}static condition(e,t){return t.useExtendedSearch}searchIn(e){let t=this.query;if(!t)return{isMatch:!1,score:1};let{includeMatches:r,isCaseSensitive:i}=this.options;e=i?e:e.toLowerCase();let s=0,n=[],c=0;for(let a=0,o=t.length;a<o;a+=1){let h=t[a];n.length=0,s=0;for(let l=0,u=h.length;l<u;l+=1){let g=h[l],{isMatch:f,indices:d,score:p}=g.search(e);if(f){if(s+=1,c+=p,r){let _=g.constructor.type;MultiMatchSet.has(_)?n=[...n,...d]:n.push(d)}}else{c=0,s=0,n.length=0;break}}if(s){let x={isMatch:!0,score:c/s};return r&&(x.indices=n),x}}return{isMatch:!1,score:1}}}let registeredSearchers=[];function register(...e){registeredSearchers.push(...e)}function createSearcher(e,t){for(let r=0,i=registeredSearchers.length;r<i;r+=1){let s=registeredSearchers[r];if(s.condition(e,t))return new s(e,t)}return new BitapSearch(e,t)}let LogicalOperator={AND:"$and",OR:"$or"},KeyType={PATH:"$path",PATTERN:"$val"},isExpression=e=>!!(e[LogicalOperator.AND]||e[LogicalOperator.OR]),isPath=e=>!!e[KeyType.PATH],isLeaf=e=>!isArray(e)&&isObject(e)&&!isExpression(e),convertToExplicit=e=>({[LogicalOperator.AND]:Object.keys(e).map(t=>({[t]:e[t]}))});function parse(e,t,{auto:r=!0}={}){let i=e=>{let s=Object.keys(e),n=isPath(e);if(!n&&s.length>1&&!isExpression(e))return i(convertToExplicit(e));if(isLeaf(e)){let c=n?e[KeyType.PATH]:s[0],a=n?e[KeyType.PATTERN]:e[c];if(!isString(a))throw Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(c));let o={keyId:createKeyId(c),pattern:a};return r&&(o.searcher=createSearcher(a,t)),o}let h={children:[],operator:s[0]};return s.forEach(t=>{let r=e[t];isArray(r)&&r.forEach(e=>{h.children.push(i(e))})}),h};return isExpression(e)||(e=convertToExplicit(e)),i(e)}function computeScore(e,{ignoreFieldNorm:t=Config.ignoreFieldNorm}){e.forEach(e=>{let r=1;e.matches.forEach(({key:e,norm:i,score:s})=>{let n=e?e.weight:null;r*=Math.pow(0===s&&n?Number.EPSILON:s,(n||1)*(t?1:i))}),e.score=r})}function transformMatches(e,t){let r=e.matches;t.matches=[],isDefined(r)&&r.forEach(e=>{if(!isDefined(e.indices)||!e.indices.length)return;let{indices:r,value:i}=e,s={indices:r,value:i};e.key&&(s.key=e.key.src),e.idx>-1&&(s.refIndex=e.idx),t.matches.push(s)})}function transformScore(e,t){t.score=e.score}function format(e,t,{includeMatches:r=Config.includeMatches,includeScore:i=Config.includeScore}={}){let s=[];return r&&s.push(transformMatches),i&&s.push(transformScore),e.map(e=>{let{idx:r}=e,i={item:t[r],refIndex:r};return s.length&&s.forEach(t=>{t(e,i)}),i})}class Fuse{constructor(e,t={},r){this.options={...Config,...t},this.options.useExtendedSearch,this._keyStore=new KeyStore(this.options.keys),this.setCollection(e,r)}setCollection(e,t){if(this._docs=e,t&&!(t instanceof FuseIndex))throw Error("Incorrect 'index' type");this._myIndex=t||createIndex(this.options.keys,this._docs,{getFn:this.options.getFn,fieldNormWeight:this.options.fieldNormWeight})}add(e){isDefined(e)&&(this._docs.push(e),this._myIndex.add(e))}remove(e=()=>!1){let t=[];for(let r=0,i=this._docs.length;r<i;r+=1){let s=this._docs[r];e(s,r)&&(this.removeAt(r),r-=1,i-=1,t.push(s))}return t}removeAt(e){this._docs.splice(e,1),this._myIndex.removeAt(e)}getIndex(){return this._myIndex}search(e,{limit:t=-1}={}){let{includeMatches:r,includeScore:i,shouldSort:s,sortFn:n,ignoreFieldNorm:c}=this.options,a=isString(e)?isString(this._docs[0])?this._searchStringList(e):this._searchObjectList(e):this._searchLogical(e);return computeScore(a,{ignoreFieldNorm:c}),s&&a.sort(n),isNumber(t)&&t>-1&&(a=a.slice(0,t)),format(a,this._docs,{includeMatches:r,includeScore:i})}_searchStringList(e){let t=createSearcher(e,this.options),{records:r}=this._myIndex,i=[];return r.forEach(({v:e,i:r,n:s})=>{if(!isDefined(e))return;let{isMatch:n,score:c,indices:a}=t.searchIn(e);n&&i.push({item:e,idx:r,matches:[{score:c,value:e,norm:s,indices:a}]})}),i}_searchLogical(e){let t=parse(e,this.options),r=(e,t,i)=>{if(!e.children){let{keyId:s,searcher:n}=e,c=this._findMatches({key:this._keyStore.get(s),value:this._myIndex.getValueForItemAtKeyId(t,s),searcher:n});return c&&c.length?[{idx:i,item:t,matches:c}]:[]}let a=[];for(let o=0,h=e.children.length;o<h;o+=1){let l=e.children[o],u=r(l,t,i);if(u.length)a.push(...u);else if(e.operator===LogicalOperator.AND)return[]}return a},i=this._myIndex.records,s={},n=[];return i.forEach(({$:e,i:i})=>{if(isDefined(e)){let c=r(t,e,i);c.length&&(s[i]||(s[i]={idx:i,item:e,matches:[]},n.push(s[i])),c.forEach(({matches:e})=>{s[i].matches.push(...e)}))}}),n}_searchObjectList(e){let t=createSearcher(e,this.options),{keys:r,records:i}=this._myIndex,s=[];return i.forEach(({$:e,i:i})=>{if(!isDefined(e))return;let n=[];r.forEach((r,i)=>{n.push(...this._findMatches({key:r,value:e[i],searcher:t}))}),n.length&&s.push({idx:i,item:e,matches:n})}),s}_findMatches({key:e,value:t,searcher:r}){if(!isDefined(t))return[];let i=[];if(isArray(t))t.forEach(({v:t,i:s,n:n})=>{if(!isDefined(t))return;let{isMatch:c,score:a,indices:o}=r.searchIn(t);c&&i.push({score:a,key:e,value:t,idx:s,norm:n,indices:o})});else{let{v:s,n:n}=t,{isMatch:c,score:a,indices:o}=r.searchIn(s);c&&i.push({score:a,key:e,value:s,norm:n,indices:o})}return i}}Fuse.version="7.0.0",Fuse.createIndex=createIndex,Fuse.parseIndex=parseIndex,Fuse.config=Config,Fuse.parseQuery=parse,register(ExtendedSearch);export{Fuse as default};
